import java.util.ArrayList;
import java.util.List;

/*The prime 41, can be written as the sum of six consecutive primes:

41 = 2 + 3 + 5 + 7 + 11 + 13
This is the longest sum of consecutive primes that adds to a prime below one-hundred.

The longest sum of consecutive primes below one-thousand that adds to a prime, 
contains 21 terms, and is equal to 953.
Which prime, below one-million, can be written as the sum of the most consecutive primes?*/
public class Problem50 {

    public static void main(String[] args) {
        List<Integer> primes=new ArrayList<>();
        for (int i = 2; i < 1_000_000; i++) {
            if (isPrime(i)) {
                primes.add(i);
            }
        }
       
        int max=0,current=0;
        long sum=0, tempSum=0;
        for (int i = 0; i < primes.size(); i++) {
            if (isPrime(tempSum+primes.get(i))) {
                tempSum+=primes.get(i);
                current++;
            }else{
                sum=tempSum;
                tempSum=0;
                if (current >max) {
                    max=current;
                    current=0;
                }
            }
            
        }

        System.out.println(sum);
        System.out.println(max);
    }


    private static boolean isPrime(long number){
        if (number < 2) {
            return false;
        }
        int lim=(int)Math.sqrt(number);
        for (int i = 2; i <= lim; i++) {
            if (number % i == 0) {
                return false;
            }
        }
        return true;
    }
}
