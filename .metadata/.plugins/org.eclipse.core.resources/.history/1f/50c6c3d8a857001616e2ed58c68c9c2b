
public class Problem58 {

    public static void main(String[] args) {
        //top-right: n^2 
        //top-left: n^2 - n + 1 
        //bottom-left: n^2 - 2n + 2 
        //bottom-right: n^2 - 3n + 3
        int n=8, all=4; int result=0;
        int countOfPrimes=8;
 
        while (countOfPrimes/ all > 0.1 ) {
            countOfPrimes=prime(n * n)+prime(n * n - n + 1)+prime(n * n - 2 * n + 2)+prime(n * n - 3 * n + 3);
            System.out.println(countOfPrimes);
            n++; all=4*n;
        }
        System.out.println(n);
    }

    private static int prime(long number) {
        return isPrime(number) ? 1 : 0;
    }
    
    private static boolean isPrime(long number){
        if (number < 2) {
            return false;
        }
        double lim=Math.sqrt(number);
        for (int i = 2; i <= lim; i++) {
            if (number % i == 0) {
                return false;
            }
        }
        return true;
    }
}
