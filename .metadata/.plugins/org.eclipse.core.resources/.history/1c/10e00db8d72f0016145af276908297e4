import java.util.ArrayList;
import java.util.List;

public class Problem61 {

	public static void main(String[] args) {
		List<Integer> resultList=new ArrayList<>();
		int fourDigitNumber=0;
		int nextNumber=0;int count=0;
		for (int i = 10; i < 100; i++) {
			for (int j = 10; j < 100; j++) {
				fourDigitNumber=i*100 +j;
			//	System.out.println(fourDigitNumber);
				if (hasRoot(3, fourDigitNumber)) {
					//count++;
					System.out.println("!!!!!!!!!!!!!!!!"+fourDigitNumber);
				}
				//System.out.println(count);
				//next number
				for (int j2 = 10; j2 < 100; j2++) {
					nextNumber=j2*100+i;
					//System.out.println(nextNumber);
					
				}
				
				
			//	System.out.println();
			}
		}

	}
	
	private static boolean hasRoot(int x, int number){
		double root=0;
		 switch (x) {

         case 3:
             //Triangle numbers
             // n * (n + 1) / 2;
        	 root= (-1+ Math.sqrt(1+number*8) )/2;
        	 return root % 1==0;
          //   break;
         case 4:
             // Square numbers
           //  number = n * n;
             break;
         case 5:
             // Pentagonal numbers
           //  number = n * (3 * n - 1) / 2;
             break;
         case 6:
             //Hexagonal numbers
           //  number = n * (2*n - 1);
             break;
         case 7:
             //Heptagonal numbers
           //  number = n * (5 * n - 3) / 2;
             break;
         case 8:
             //Octagonal numbers
           //  number = n * (3 * n - 2);
             break;
     }
		 return false;
	}

}
